{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int x = -1, y = -1;\n    while (n > 9)\n    {\n        if (x == -1)\n        {\n            x = n % 100;\n        }\n        else\n        {\n            y = n % 100;\n        }\n        n = n / 10;\n    }\n    if (x < y)\n    {\n        n = (n * 100 + x) * 100 + y;\n    }\n    else\n    {\n        n = (n * 100 + y) * 100 + x;\n    }\n    cout << n << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "x <- -1; y <- -1\n┌cât timp n>9 execută\n│┌dacă x=-1 atunci x <- n%100\n││altfel y <- n%100\n│└■\n│ n <- [n/10]\n└■\n┌dacă x<y atunci n <- (n*100+x)*100+y\n│altfel n <- (n*100+y)*100+x\n└■\nscrie n"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int t = 1;\n    for (int i = 1; i <= n / k; i++)\n    {\n        for (int j = 1; j <= k; j++)\n        {\n            cout << 2 * t << \" \";\n        }\n        t++;\n    }\n    for (int i = n % k; i >= 1; i--)\n    {\n        cout << 3 * t << \" \";\n    }\n    return 0;\n}"}, {"role": "assistant", "content": "citește n,k\n (numere naturale nenule)\nt <- 1\n┌pentru i <- 1,[n/k] execută\n│┌pentru j <- 1,k execută\n││ scrie 2*t,' '\n│└■\n│ t <- t+1\n└■\n┌pentru i <- n%k,1,-1 execută\n│ scrie 3*t,' '\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int p = 1, m = 0, k = 0;\n    while (n != 0)\n    {\n        int x;\n        cin >> x;\n        for (int i = 1; i <= k; i++)\n        {\n            x = x / 10;\n        }\n        int c;\n        if (x != 0)\n        {\n            c = x % 10;\n        }\n        else\n        {\n            c = n % 10;\n        }\n        m = c * p + m;\n        n = n / 10;\n        p = p * 10;\n        k++;\n    }\n    cout << m << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citeşte n (număr natural)\np <- 1; m <- 0; k <- 0\n┌cât timp n≠0 execută\n│ citește x (număr natural)\n│┌pentru i <- 1,k execută\n││ x <- [x/10]\n│└■\n│┌dacă x≠0 atunci c <- x%10\n││altfel c <- n%10\n│└■\n│ m <- c*p+m\n│ n <- [n/10]\n│ p <- p*10; k <- k+1\n└■\nscrie m"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int m = 0;\n    do\n    {\n        int c = n % 10;\n        n = n / 10;\n        if (c == 0)\n        {\n            c = 2;\n        }\n        else\n        {\n            if (c % 2 == 0)\n            {\n                c = 0;\n            }\n        }\n        m = m * 10 + c;\n    }\n    while (n != 0);\n    cout << m << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citeşte n (număr natural)\nm <- 0\n┌repetă\n│ c <- n%10; n <- [n/10]\n│┌dacă c=0 atunci c <- 2\n││altfel\n││┌dacă c%2=0 atunci\n│││c <- 0\n││└■\n│└■\n│ m <- m*10+c\n└până când n=0\nscrie m"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int c1 = n % 10;\n    n = n / 10;\n    int c2 = n % 10;\n    int s;\n    if (c1 == c2)\n    {\n        s = 0;\n    }\n    else\n    {\n        if (c1 > c2)\n        {\n            s = 1;\n        }\n        else\n        {\n            s = -1;\n        }\n    }\n    do\n    {\n        c1 = n % 10;\n        n = n / 10;\n        c2 = n % 10;\n    }\n    while ((c1 - c2) * s <= 0);\n    cout << s << \" \" << n << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citeşte n (număr natural, n>9)\nc1 <- n%10; n <- [n/10]; c2 <- n%10\n┌dacă c1=c2 atunci s <- 0\n│altfel\n│┌dacă c1>c2 atunci s <- 1\n││altfel s <- -1\n│└■\n└■\n┌repetă\n│ c1 <- n%10; n <- [n/10]; c2 <- n%10\n└până când (c1-c2)*s≤0\nscrie s,' ',n"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    do\n    {\n        int c1 = n % 10;\n        n = n / 10;\n        int c2 = n % 10;\n        if (c1 > c2)\n        {\n            c2 = c1;\n            c1 = n % 10;\n        }\n        while (c1 < c2)\n        {\n            cout << c1;\n            c2 = c2 / 2;\n        }\n    }\n    while (n > 9);\n    return 0;\n}"}, {"role": "assistant", "content": "citeşte n (număr natural)\n┌repetă\n│ c1 <- n%10; n <- [n/10]; c2 <- n%10\n│┌dacă c1>c2 atunci\n││ c2 <- c1; c1 <- n%10\n│└■\n│┌cât timp c1<c2 execută\n││ scrie c1\n││ c2 <- [c2/2]\n│└■\n└până când n≤9"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int x = 1, y = n, d = 2;\n    while (x < y)\n    {\n        if (n % d == 0)\n        {\n            x = d;\n            y = n / d;\n        }\n        d++;\n    }\n    if (x == y)\n    {\n        cout << \"D\" << x << endl;\n    }\n    else\n    {\n        cout << \"N\" << endl;\n    }\n    return 0;\n}"}, {"role": "assistant", "content": "citește n\n (număr natural nenul)\nx <- 1; y <- n; d <- 2\n┌cât timp x<y execută\n│┌dacă n%d=0 atunci\n││ x <- d\n││ y <- [n/d]\n│└■\n│ d <- d+1\n└■\n┌dacă x=y atunci\n│ scrie 'D',x\n│altfel scrie 'N'\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int nr = 0, i = 1;\n    while (i <= n)\n    {\n        int x = 0, y = 1, j = 1;\n        while (j < i)\n        {\n            int r = 2 * x - y;\n            x = y;\n            y = r;\n            j++;\n        }\n        i++;\n        if (y > 0)\n        {\n            nr++;\n        }\n    }\n    cout << nr << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește n (număr natural nenul)\nnr <- 0; i <- 1\n┌cât timp i≤n execută\n│ x <- 0; y <- 1; j <- 1\n│ ┌cât timp j<i execută\n│ │ r <- 2*x-y; x <- y; y <- r\n│ │ j <- j+1\n│ └■\n│ i <- i+1\n│ ┌dacă y>0 atunci\n│ │ nr <- nr+1\n│ └■\n└■\nscrie nr"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int x = 1, m = 0, p = 1;\n    while (x < 10)\n    {\n        int cn = n;\n        while (cn != 0)\n        {\n            int c = cn % 10;\n            cn = cn / 10;\n            if (c == x)\n            {\n                m = c * p + m;\n                p = p * 10;\n            }\n        }\n        x += 2;\n    }\n    cout << m << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește n\n (număr natural nenul)\nx <- 1; m <- 0; p <- 1\n┌cât timp x<10 execută\n│ cn <- n\n│┌cât timp cn≠0 execută\n││ c <- cn%10; cn <- [cn/10]\n││┌dacă c=x atunci\n│││ m <- c*p+m; p <- p*10\n││└■\n│└■\n│ x <- x+2\n└■\nscrie m"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    do\n    {\n        int c = x % 10;\n        x = x / 10;\n        if (c != 0)\n        {\n            if (y % 10 < c)\n            {\n                y = y * 10 + c;\n            }\n            else\n            {\n                y = y * 10 - c;\n            }\n        }\n    }\n    while (x != 0);\n    cout << y << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește x,y\n (numere naturale)\n┌repetă\n│ c <- x%10\n│ x <- [x/10]\n│┌dacă c≠0 atunci\n││┌dacă y%10<c atunci\n│││ y <- y*10+c\n│││altfel\n│││ y <- y*10-c\n││└■\n│└■\n└până când x=0\nscrie y"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int t = 1;\n    for (int i = 1; i <= n / k; i++)\n    {\n        for (int j = 1; j <= k; j++)\n        {\n            cout << t << \" \";\n        }\n        t++;\n    }\n    for (int i = n % k; i >= 1; i--)\n    {\n        cout << t << \" \";\n    }\n    return 0;\n}"}, {"role": "assistant", "content": "citește n,k\n (numere naturale nenule)\nt <- 1\n┌pentru i <- 1,[n/k] execută\n│┌pentru j <- 1,k execută\n││ scrie t,' '\n│└■\n│ t <- t+1\n└■\n┌pentru i <- n%k,1,-1 execută\n│ scrie t,' '\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    if (x > y)\n    {\n        x = y;\n    }\n    int i = x, j = y, s = 0;\n    do\n    {\n        s += (i % 2) * j + (j % 2) * i;\n        i++;\n        j--;\n    }\n    while (i <= j);\n    cout << s << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește x,y\n (numere naturale nenule)\n┌dacă x>y atunci\n| x <- y\n└■\ni <- x; j <- y; s <- 0\n┌repetă\n| s <- s+(i%2)*j+(j%2)*i\n│ i <- i+1; j <- j-1\n└până când i>j\nscrie s"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int m = 0;\n    if (n == 0)\n    {\n        m = 10;\n    }\n    else\n    {\n        do\n        {\n            int c = n % 10;\n            n = n / 10;\n            if (c >= m)\n            {\n                m = c;\n            }\n            else\n            {\n                m = 10;\n            }\n        }\n        while (n != 0);\n    }\n    cout << m << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citeşte n (număr natural)\nm <- 0\n┌dacă n=0 atunci\n│ m <- 10\n│altfel\n│┌repetă\n││ c <- n%10; n <- [n/10]\n││┌dacă c≥m atunci\n│││ m <- c\n│││altfel\n│││ m <- 10\n││└■\n│└până când n=0\n└■\nscrie m"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int nr = 0, c = 9;\n    while (c >= 0)\n    {\n        int m = n;\n        while (m != 0 && m % 10 != c)\n        {\n            m = m / 10;\n        }\n        if (m != 0)\n        {\n            nr = nr * 10 + m % 10;\n        }\n        c--;\n    }\n    cout << nr << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește n (număr natural nenul)\nnr <- 0\nc <- 9\n┌cât timp c≥0 execută\n│ m <- n\n│┌cât timp m≠0 și m%10≠c execută\n││ m <- [m/10]\n│└■\n│┌dacă m≠0 atunci\n││ nr <- nr*10+m%10\n│└■\n│ c <- c-1\n└■\nscrie nr"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int p = 1, m = 0, k = 0;\n    while (n != 0)\n    {\n        int x;\n        cin >> x;\n        int i = k;\n        while (i != 0)\n        {\n            x = x / 10;\n            i--;\n        }\n        int c;\n        if (x == 0)\n        {\n            c = n % 10;\n        }\n        else\n        {\n            c = x % 10;\n        }\n        m = c * p + m;\n        n = n / 10;\n        p = p * 10;\n        k++;\n    }\n    cout << m << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citeşte n (număr natural)\np <- 1; m <- 0; k <- 0\n┌cât timp n≠0 execută\n│ citește x (număr natural)\n│ i <- k\n│┌cât timp i≠0 execută\n││ x <- [x/10]; i <- i-1\n│└■\n│┌dacă x=0 atunci c <- n%10\n││altfel c <- x%10\n│└■\n│ m <- c*p+m; n <- [n/10]\n│ p <- p*10; k <- k+1\n└■\nscrie m"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int m = 0;\n    do\n    {\n        int c = n % 10;\n        n = n / 10;\n        if (c == 9)\n        {\n            c = 1;\n        }\n        else\n        {\n            if (c % 2 == 1)\n            {\n                c = c + 1;\n            }\n        }\n        m = m * 10 + c;\n    }\n    while (n != 0);\n    cout << m << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește n (număr natural)\nm <- 0\n┌repetă\n│ c <- n%10; n <- [n/10]\n│┌dacă c=9 atunci c <- 1\n││altfel\n││┌dacă c%2=1 atunci\n│││c <- c+1\n││└■\n│└■\n│ m <- m*10+c\n└până când n=0\nscrie m"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int nr = 0;\n    for (int i = n; i >= 1; i--)\n    {\n        int x = 0, y = 1;\n        for (int j = 1; j <= i; j++)\n        {\n            int r = 2 * x - y;\n            x = y;\n            y = r;\n        }\n        if (y > 0)\n        {\n            nr++;\n        }\n    }\n    cout << nr << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește n (număr natural)\nnr <- 0\n┌pentru i <- n,1,-1 execută\n│ x <- 0; y <- 1\n│ ┌pentru j <- 1,i execută\n│ │ r <- 2*x-y; x <- y; y <- r\n│ └■\n│ ┌dacă y>0 atunci\n│ │ nr <- nr+1\n│ └■\n└■\nscrie nr"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int nr;\n    if (k == 0)\n    {\n        nr = -1;\n    }\n    else\n    {\n        nr = 0;\n        int p = 1;\n        do\n        {\n            int c = n % 10;\n            n = n / 10;\n            if (c % 2 == 0)\n            {\n                nr = nr + c * p;\n                p = p * 10;\n            }\n            else\n            {\n                k--;\n            }\n        }\n        while (n != 0 || k != 0);\n    }\n    cout << nr << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește n,k\n (numere naturale)\n┌dacă k=0 atunci nr <- -1\n│altfel\n│ nr <- 0\n│ p <- 1\n│┌repetă\n││ c <- n%10; n <- [n/10]\n││┌dacă c%2=0 atunci\n│││ nr <- nr+c*p; p <- p*10\n│││altfel k <- k-1\n││└■\n│└până când n=0 sau k=0\n└■\nscrie nr"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int i = x, j = y, s = 0;\n    while (i <= j)\n    {\n        if (i % 2 == 0)\n        {\n            s += j;\n        }\n        if (j % 2 == 0)\n        {\n            s += i;\n        }\n        i++;\n        j--;\n    }\n    cout << s << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește x,y\n (numere naturale x≤y)\ni <- x; j <- y; s <- 0\n┌cât timp i≤j execută\n│┌dacă i%2=0 atunci\n││ s <- s+j\n│└■\n│┌dacă j%2=0 atunci\n││ s <- s+i\n│└■\n│i <- i+1; j <- j-1\n└■\nscrie s"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = k; j >= 1; j--)\n        {\n            cout << j << \" \";\n        }\n        for (int j = 1; j <= k; j++)\n        {\n            cout << j << \" \";\n        }\n        k--;\n    }\n    return 0;\n}"}, {"role": "assistant", "content": "citește n,k\n (numere naturale nenule)\n┌pentru i <- 1,n execută\n│┌pentru j <- k,1,-1 execută\n││ scrie j,' '\n│└■\n│┌pentru j <- 1,k execută\n││ scrie j,' '\n│└■\n│ k <- k-1\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    while (n != 0)\n    {\n        int c = n % 10;\n        n = n / 10;\n        if (c % 2 != 0)\n        {\n            c = c + 1;\n        }\n        while (c > 0 && c < 10)\n        {\n            cout << c;\n            c = c * 2;\n        }\n    }\n    return 0;\n}"}, {"role": "assistant", "content": "citește n (număr natural nenul)\n┌cât timp n≠0 execută\n│ c <- n%10; n <- [n/10]\n│┌dacă c%2≠0 atunci\n││ c <- c+1\n│└■\n│┌cât timp c>0 și c<10 execută\n││ scrie c\n││ c <- c*2\n│└■\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int d = 1, s = 0;\n    while (d * d < n)\n    {\n        if (n % d == 0 && d % 2 != (n / d) % 2)\n        {\n            s += d + n / d;\n        }\n        d++;\n    }\n    if (d * d == n)\n    {\n        s += d;\n    }\n    cout << s << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește n\n (număr natural nenul)\nd <- 1; s <- 0\n┌cât timp d*d<n execută\n│┌dacă n%d=0 și d%2≠[n/d]%2 atunci\n││ s <- s+d+[n/d]\n│└■\n│ d <- d+1\n└■\n┌dacă d*d=n atunci s <- s+d\n└■\nscrie s"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int x = 0, m = 0, p = 1;\n    while (x < 10)\n    {\n        int cn = n;\n        while (cn != 0)\n        {\n            int c = cn % 10;\n            cn = cn / 10;\n            if (c == x)\n            {\n                m = c * p + m;\n                p = p * 10;\n            }\n        }\n        x += 2;\n    }\n    cout << m << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește n\n (număr natural nenul)\nx <- 0; m <- 0; p <- 1\n┌cât timp x<10 execută\n│ cn <- n\n│┌cât timp cn≠0 execută\n││ c <- cn%10; cn <- [cn/10]\n││┌dacă c=x atunci\n│││ m <- c*p+m; p <- p*10\n││└■\n│└■\n│ x <- x+2\n└■\nscrie m"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int p = 1;\n    while (n > 0)\n    {\n        int c = n % 10;\n        if (k > 0)\n        {\n            if (c % 2 == 1)\n            {\n                p = p * c;\n            }\n        }\n        n = n / 10;\n        k--;\n    }\n    cout << p << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citeşte n, k\n (numere naturale)\np <- 1\n┌cât timp n>0 execută\n│ c <- n%10\n│┌dacă k>0 atunci\n││ ┌dacă c%2=1 atunci\n││ │ p <- p*c\n││ └■\n│└■\n│ n <- [n/10]; k <- k-1\n└■\nscrie p"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int y = 0;\n    do\n    {\n        if (x > 9)\n        {\n            do\n            {\n                x = x / 10;\n            }\n            while (x > 9);\n        }\n        y = y * 10 + x;\n        cin >> x;\n    }\n    while (x != 0);\n    cout << y << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citeşte x\n (număr natural nenul)\ny <- 0\n┌repetă\n│┌dacă x>9 atunci\n││┌repetă\n│││ x <- [x/10]\n││└până când x≤9\n│└■\n│ y <- y*10+x\n│ citeşte x (număr natural)\n└până când x=0\nscrie y"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int k = 0, i = x;\n    while (i <= y)\n    {\n        int n = i, c = 0;\n        while (n > 0 && c == 0)\n        {\n            if (n % 2 == 1)\n            {\n                c = 1;\n            }\n            n = n / 10;\n        }\n        k += c;\n        i++;\n    }\n    cout << k << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește x,y\n (numere naturale, x≤y)\nk <- 0; i <- x\n┌cât timp i≤y execută\n│ n <- i; c <- 0\n│┌cât timp n>0 și c=0 execută\n││┌dacă n%2=1 atunci c <- 1\n││└■\n││ n <- [n/10]\n│└■\n│ k <- k+c\n│ i <- i+1\n└■\nscrie k"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int n = 0;\n    while (x != 0)\n    {\n        int y = x, c = 0;\n        while (y > 0)\n        {\n            if (y % 10 > c)\n            {\n                c = y % 10;\n            }\n            y = y / 10;\n        }\n        n = n * 10 + c;\n        cin >> x;\n    }\n    cout << n << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește x (număr natural)\nn <- 0\n┌cât timp x≠0 execută\n│ y <- x; c <- 0\n│ ┌cât timp y>0 execută\n│ │ ┌dacă y%10>c atunci\n│ │ │ c <- y%10\n│ │ └■\n│ │ y <- [y/10]\n│ └■\n│ n <- n*10+c\n│ citește x (număr natural)\n└■\nscrie n"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int x = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        if (i % 2 == 0)\n        {\n            x += i * i;\n        }\n        else\n        {\n            x += (i + 1) * (i + 1);\n        }\n    }\n    cout << x << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "citește n (număr natural)\nx <- 0\n┌pentru i <- 1,n execută\n│ ┌dacă i%2=0 atunci\n│ │ x <- x+i*i\n│ │altfel\n│ │ x <- x+(i+1)*(i+1)\n│ └■\n└■\nscrie x"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = i; j <= n; j++)\n        {\n            cout << \"+\";\n        }\n        if (i % 2 != 0)\n        {\n            cout << \"@\";\n        }\n    }\n    return 0;\n}"}, {"role": "assistant", "content": "citeşte n\n (număr natural nenul)\n┌pentru i <- 1,n execută\n│┌pentru j <- i,n execută\n││ scrie '+'\n│└■\n│┌dacă i%2≠0 atunci\n││ scrie '@'\n│└■\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    if (x < y)\n    {\n        x = x - y;\n        y = x + y;\n        x = y - x;\n    }\n    while (x >= y)\n    {\n        cout << \"A\";\n        x = x - y;\n        if (x % 2 == 0)\n        {\n            cout << \"A\";\n        }\n        else\n        {\n            cout << \"B\";\n        }\n    }\n    return 0;\n}"}, {"role": "assistant", "content": "citește x,y (numere naturale)\n┌dacă x<y atunci\n│ x <- x-y; y <- x+y; x <- y-x\n└■\n┌cât timp x≥y execută\n│ scrie 'A'\n│ x <- x-y\n│┌dacă x%2=0 atunci scrie 'A'\n││altfel scrie 'B'\n│└■\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    if (m > n)\n    {\n        n = m;\n    }\n    if (m % 2 == 0)\n    {\n        m = m + 1;\n    }\n    while (m <= n)\n    {\n        m += 2;\n        cout << \"*\";\n    }\n    return 0;\n}"}, {"role": "assistant", "content": "citește m,n\n (numere naturale)\n┌dacă m>n atunci\n│ n <- m\n└■\n┌dacă m%2=0 atunci\n│ m <- m+1\n└■\n┌cât timp m≤n execută\n│ m <- m+2\n│ scrie '*'\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint main() {\n    int t = 1;\n    for (int i = 1; i <= n / k; i++)\n    {\n        for (int j = 1; j <= k; j++)\n        {\n            cout << 2 * t << \" \";\n        }\n        t++;\n    }\n    for (int i = n % k; i >= 1; i--)\n    {\n        cout << 3 * t << \" \";\n    }\n    return 0;\n}"}, {"role": "assistant", "content": "citește n,k\n (numere naturale nenule)\nt <- 1\n┌pentru i <- 1,[n/k] execută\n│┌pentru j <- 1,k execută\n││ scrie 2*t,' '\n│└■\n│ t <- t+1\n└■\n┌pentru i <- n%k,1,-1 execută\n│ scrie 3*t,' '\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nvoid afisare(int a, int b) {\n    cout << a + b << endl;\n}\nint main() {\n    int x = 5, y = 3;\n    afisare(x, y);\n    return 0;\n}"}, {"role": "assistant", "content": "Subprogram afisare(a, b)\n┌scrie a+b\n└■\ncitește x, y (numere naturale)\n┌apelează afisare(x, y)\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nint suma(int a, int b) {\n    return a + b;\n}\nint main() {\n    int x = 10, y = 20;\n    int result = suma(x, y);\n    cout << result << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "Subprogram suma(a, b)\n┌returnează a+b\n└■\ncitește x, y (numere naturale)\nresult <- apelează suma(x, y)\n┌scrie result\n└■"}]}
{"messages": [{"role": "system", "content": "Transformă codul C++ în pseudocod folosind formatul standard românesc cu blocuri și săgeți."}, {"role": "user", "content": "#include <iostream>\nusing namespace std;\nvoid multiply(int &a, int b) {\n    a = a * b;\n}\nint main() {\n    int x = 4, y = 3;\n    multiply(x, y);\n    cout << x << endl;\n    return 0;\n}"}, {"role": "assistant", "content": "Subprogram multiply(a, b)\n┌a <- a*b\n└■\ncitește x, y (numere naturale)\n┌apelează multiply(x, y)\n│┌scrie x\n└■"}]}