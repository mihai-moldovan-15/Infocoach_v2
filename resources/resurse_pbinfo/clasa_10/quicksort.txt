QuickSort sau Sortarea rapidă este o metodă eficientă de sortare a unui tablou, descoperită în 1960 de programatorul britanic C.A.R. Hoare. Pentru un set de n valori oarecare algoritmul efectuează
O(n * logn) comparații, dar în cazul cel mai nefavorabil se efectuează O(n^2) comparații.

Algoritmul este de tip divide et impera; el sortează o secvență a tabloului (inițial întreg tabloul), astfel:

se alege un element special al listei, numit pivot;
se ordonează elementele listei, astfel încât toate elementele din stânga pivotului să fie mai mici sau egale cu acesta, și toate elementele din dreapta pivotului să fie mai mari sau egale cu acesta;
se continuă recursiv cu secvența din stânga pivotului și cu cea din dreapta lui.

Următoarele funcții C++ realizează sortarea unui tablou, transmis ca parametru:

int pivot(int A[], int st, int dr)// partitionam vectorul A - toate elementele mai mici decat A[dr] ajung in stanga acestuia, iar toate elementele mai mari ajung in dreapta
{
    int poz = st;
    for (int i = st; i < dr; i ++)
        if (A[i] < A[dr])//pozitionam in stanga
            swap (A[i], A[poz ++]);

    swap (A[poz], A[dr]);//aducem A[dr] pe locul potrivit

    return poz;
}

void QuickSort(int A[], int st, int dr)
{
    if (st < dr)
    {
        int p = pivot(A, st, dr);
        QuickSort(A, st, p - 1);
        QuickSort(A, p + 1, dr);
    }
}

int main()
{
    ...
    QuickSort(A, 1, n);
    ...
}
