[
  {
    "id": "1",
    "title": "Introducere în QuickSort",
    "content": "QuickSort, descoperit de C.A.R. Hoare (1960), sortează un tablou cu O(n*log n) comparații (medie), O(n^2) (cel mai rău caz). Folosește divide et impera.",
    "tags": ["quicksort", "sortare", "divide et impera", "c++"]
  },
  {
    "id": "2",
    "title": "Algoritmul QuickSort",
    "content": "Alege un pivot, mută elementele mai mici la stânga și mai mari la dreapta, sortează recursiv. Cod pivot: int pivot(int A[], int st, int dr) { int poz=st; for(int i=st;i<dr;i++) if(A[i]<A[dr]) swap(A[i],A[poz++]); swap(A[poz],A[dr]); return poz; } Cod QuickSort: void QuickSort(int A[], int st, int dr) { if(st<dr) { int p=pivot(A,st,dr); QuickSort(A,st,p-1); QuickSort(A,p+1,dr); } }",
    "tags": ["quicksort", "pivot", "algoritm", "c++"]
  },
  {
    "id": "3",
    "title": "Exemplu utilizare",
    "content": "Cod main: int main() { ... QuickSort(A,1,n); ... } Sortează tablou A de la indicele 1 la n.",
    "tags": ["quicksort", "exemplu", "c++", "sortare"]
  }
]